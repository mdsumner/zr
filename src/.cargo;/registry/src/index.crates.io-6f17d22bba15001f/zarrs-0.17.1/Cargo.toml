# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.76"
name = "zarrs"
version = "0.17.1"
authors = ["Lachlan Deakin <ljdgit@gmail.com>"]
build = false
exclude = [
    ".dockerignore",
    ".github",
    ".editorconfig",
    "Dockerfile",
    "coverage.sh",
    "TODO.md",
    "tests/",
]
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "A library for the Zarr storage format for multidimensional arrays and metadata"
documentation = "https://docs.rs/zarrs"
readme = "README.md"
keywords = ["zarr"]
categories = ["encoding"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/LDeakin/zarrs"

[package.metadata.docs.rs]
all-features = true

[lib]
name = "zarrs"
crate-type = ["lib"]
path = "src/lib.rs"
bench = false

[[example]]
name = "array_write_read"
path = "examples/array_write_read.rs"
doc-scrape-examples = true
required-features = [
    "filesystem",
    "ndarray",
]

[[example]]
name = "array_write_read_ndarray"
path = "examples/array_write_read_ndarray.rs"
doc-scrape-examples = true
required-features = [
    "filesystem",
    "ndarray",
]

[[example]]
name = "array_write_read_string"
path = "examples/array_write_read_string.rs"
doc-scrape-examples = true
required-features = [
    "filesystem",
    "ndarray",
]

[[example]]
name = "async_array_write_read"
path = "examples/async_array_write_read.rs"
doc-scrape-examples = true
required-features = [
    "ndarray",
    "async",
]

[[example]]
name = "async_http_array_read"
path = "examples/async_http_array_read.rs"
doc-scrape-examples = true
required-features = [
    "ndarray",
    "async",
]

[[example]]
name = "rectangular_array_write_read"
path = "examples/rectangular_array_write_read.rs"
doc-scrape-examples = true
required-features = [
    "filesystem",
    "ndarray",
]

[[example]]
name = "sharded_array_write_read"
path = "examples/sharded_array_write_read.rs"
required-features = [
    "filesystem",
    "ndarray",
    "sharding",
]

[[example]]
name = "sync_http_array_read"
path = "examples/sync_http_array_read.rs"
doc-scrape-examples = true
required-features = [
    "ndarray",
    "async",
]

[[example]]
name = "zip_array_write_read"
path = "examples/zip_array_write_read.rs"
doc-scrape-examples = false
required-features = [
    "filesystem",
    "ndarray",
]

[[bench]]
name = "array_blosc"
path = "benches/array_blosc.rs"
harness = false

[[bench]]
name = "array_subset"
path = "benches/array_subset.rs"
harness = false

[[bench]]
name = "array_uncompressed"
path = "benches/array_uncompressed.rs"
harness = false

[[bench]]
name = "codecs"
path = "benches/codecs.rs"
harness = false

[[bench]]
name = "fill_value"
path = "benches/fill_value.rs"
harness = false

[dependencies.async-recursion]
version = "1.0.5"
optional = true

[dependencies.async-trait]
version = "0.1.74"
optional = true

[dependencies.blosc-sys]
version = "0.3.4"
features = [
    "snappy",
    "lz4",
    "zlib",
    "zstd",
]
optional = true
package = "blosc-src"

[dependencies.bytemuck]
version = "1.14.0"
features = [
    "extern_crate_alloc",
    "must_cast",
    "min_const_generics",
]

[dependencies.bytes]
version = "1.6.0"

[dependencies.bzip2]
version = "0.4.4"
features = ["static"]
optional = true

[dependencies.crc32c]
version = "0.6.5"
optional = true

[dependencies.derive_more]
version = "1.0.0"
features = [
    "deref",
    "display",
    "from",
]

[dependencies.flate2]
version = "1.0.30"
optional = true

[dependencies.futures]
version = "0.3.29"
optional = true

[dependencies.gdeflate-sys]
version = "0.4.1"
optional = true

[dependencies.half]
version = "2.0.0"
features = ["bytemuck"]

[dependencies.inventory]
version = "0.3.0"

[dependencies.itertools]
version = "0.13.0"

[dependencies.lru]
version = "0.12.4"

[dependencies.moka]
version = "0.12.8"
features = ["sync"]

[dependencies.ndarray]
version = ">=0.15.0,<17"
optional = true

[dependencies.num]
version = "0.4.1"

[dependencies.num-complex]
version = "0.4.3"
features = ["bytemuck"]

[dependencies.pco]
version = "0.3.1"
optional = true

[dependencies.rayon]
version = "1.10.0"

[dependencies.rayon_iter_concurrent_limit]
version = "0.2.0"

[dependencies.serde]
version = "1.0.184"
features = ["derive"]

[dependencies.serde_json]
version = "1.0.71"
features = [
    "float_roundtrip",
    "preserve_order",
]

[dependencies.thiserror]
version = "1.0.61"

[dependencies.thread_local]
version = "1.1.8"

[dependencies.unsafe_cell_slice]
version = "0.1.0"

[dependencies.zarrs_filesystem]
version = "0.1.0"
optional = true

[dependencies.zarrs_metadata]
version = "0.1.0"

[dependencies.zarrs_storage]
version = "0.2.2"

[dependencies.zfp-sys]
version = "0.1.15"
features = ["static"]
optional = true

[dependencies.zstd]
version = "0.13.1"
features = ["zstdmt"]
optional = true

[dev-dependencies.chrono]
version = "0.4"

[dev-dependencies.criterion]
version = "0.5.1"

[dev-dependencies.object_store]
version = "0.11"
features = ["http"]

[dev-dependencies.opendal]
version = "0.50.0"
features = [
    "services-fs",
    "services-http",
]

[dev-dependencies.tempfile]
version = "3"

[dev-dependencies.tokio]
version = "1.34.0"
features = [
    "macros",
    "rt-multi-thread",
]

[dev-dependencies.walkdir]
version = "2.3.2"

[dev-dependencies.zarrs_filesystem]
version = "0.1.0"

[dev-dependencies.zarrs_object_store]
version = "0.2.1"

[dev-dependencies.zarrs_opendal]
version = "0.3.1"

[dev-dependencies.zarrs_storage]
version = "0.2.2"

[dev-dependencies.zarrs_zip]
version = "0.1.0"

[dev-dependencies.zip]
version = "2.1.3"

[features]
async = [
    "dep:async-trait",
    "dep:async-recursion",
    "dep:futures",
    "zarrs_storage/async",
]
bitround = []
blosc = ["dep:blosc-sys"]
bz2 = ["dep:bzip2"]
crc32c = ["dep:crc32c"]
default = [
    "filesystem",
    "ndarray",
    "blosc",
    "crc32c",
    "gzip",
    "sharding",
    "transpose",
    "zstd",
]
filesystem = ["dep:zarrs_filesystem"]
gdeflate = ["dep:gdeflate-sys"]
gzip = ["dep:flate2"]
ndarray = ["dep:ndarray"]
pcodec = ["dep:pco"]
sharding = []
transpose = ["dep:ndarray"]
zfp = ["dep:zfp-sys"]
zstd = ["dep:zstd"]
